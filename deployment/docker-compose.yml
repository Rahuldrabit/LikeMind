version: '3.8'

services:
  # Frontend (React/Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: likemind-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_BASE_URL=http://backend:8080
      - NEXT_PUBLIC_WEBSOCKET_URL=ws://backend:8080
    depends_on:
      - backend
    networks:
      - likemind-network

  # Backend (Golang)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: likemind-backend
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/likemind?sslmode=disable
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - VECTOR_DB_URL=http://qdrant:6333
    depends_on:
      - postgres
      - redis
      - qdrant
    networks:
      - likemind-network

  # AI Layer (Python)
  ai-service:
    build:
      context: ./ai-layer
      dockerfile: Dockerfile
    container_name: likemind-ai
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - QDRANT_URL=http://qdrant:6333
      - REDIS_URL=redis://redis:6379
    depends_on:
      - qdrant
      - redis
    networks:
      - likemind-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: likemind-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: likemind
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./databases/postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - likemind-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: likemind-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./databases/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - likemind-network

  # Vector Database (Qdrant)
  qdrant:
    image: qdrant/qdrant:latest
    container_name: likemind-qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      QDRANT__SERVICE__HTTP_PORT: 6333
      QDRANT__SERVICE__GRPC_PORT: 6334
    networks:
      - likemind-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: likemind-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./deployment/nginx/conf.d:/etc/nginx/conf.d
      - ./deployment/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
      - ai-service
    networks:
      - likemind-network

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: likemind-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./deployment/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - likemind-network

  # Grafana for Dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: likemind-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./deployment/monitoring/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - likemind-network

volumes:
  postgres_data:
  redis_data:
  qdrant_data:
  prometheus_data:
  grafana_data:

networks:
  likemind-network:
    driver: bridge
